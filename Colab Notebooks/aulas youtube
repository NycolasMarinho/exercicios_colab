{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNzRbGCV954HqYeUN+IePX/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iZDc0N0E6yiu","executionInfo":{"status":"ok","timestamp":1741792752857,"user_tz":180,"elapsed":3994,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"a6ee07a2-48d3-4cd7-aa37-b6091590428b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o preço do pão:2\n","Digite o valor que voce tem: 10\n","Voce tem dinheiro para comprar um pão\n","Voce pode comprar 5.0 paes\n"]}],"source":["preco_do_pao = float(input(\"Digite o preço do pão:\"))\n","orcamento_usuario = float(input(\"Digite o valor que voce tem: \"))\n","quantidade_de_paes = orcamento_usuario / preco_do_pao\n","\n","if orcamento_usuario > preco_do_pao:\n","  print(\"Voce tem dinheiro para comprar um pão\")\n","  print(\"Voce pode comprar\", quantidade_de_paes, \"paes\")\n","else:\n","  print(\"Voce não tem dinheiro para comprar um pão\")"]},{"cell_type":"code","source":["temperatura_em_celsius = float(input(\"Digite a temperatura em celsius: \"))\n","\n","if temperatura_em_celsius <= 15:\n","  print(\"Está frio\")\n","elif temperatura_em_celsius > 15 and temperatura_em_celsius <= 22:\n","  print(\"Está normal\")\n","elif temperatura_em_celsius > 22 and temperatura_em_celsius <= 30:\n","  print(\"Está quente\")\n","else:\n","  print(\"Está muito quente\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zGaQoEjP8FaT","executionInfo":{"status":"ok","timestamp":1741998607678,"user_tz":180,"elapsed":1902,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"2d4be88d-6180-4b79-c49f-bf215653d7e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a temperatura em celsius: 10\n","Está frio\n"]}]},{"cell_type":"code","source":["horario = float(input(\"Digite o horário: \"))\n","\n","if horario >=6 and horario <=12:\n","  print(\"Bom dia\")\n","elif horario >=13 and horario <=18:\n","  print(\"Boa tarde\")\n","elif horario >=19 and horario <=23:\n","  print(\"Boa noite\")\n","else:\n","  print(\"Boa madrugada\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMhmaoq79c5j","executionInfo":{"status":"ok","timestamp":1741793394820,"user_tz":180,"elapsed":1288,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"bb43543b-7f14-4478-f82d-016f363cff0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o horário: 6\n","Bom dia\n"]}]},{"cell_type":"code","source":["idade = int(input(\"Digite a sua idade: \"))\n","condicionamento_fisico = input(\"Digite a sua condição física [boa/ruim]: \")\n","permissao_medica = input(\"Voce tem permissão médica? [sim/não]: \")\n","\n","if idade >=18 and idade <=35 and (condicionamento_fisico == \"boa\" or permissao_medica == \"sim\"):\n","    print(\"Voce está apto a participar das olimpiadas\")\n","else:\n","    print(\"Voce não está apto a participar das olimpiadas\")\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAGnl24E-jty","executionInfo":{"status":"ok","timestamp":1741795230271,"user_tz":180,"elapsed":4612,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"0fa432f6-4ad0-4d35-f81a-7ed7417e630d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a sua idade: 15\n","Digite a sua condição física [boa/ruim]: boa\n","Voce tem permissão médica? [sim/não]: sim\n","Voce não está apto a participar das olimpiadas\n"]}]},{"cell_type":"code","source":["print(\"Hello word!\")\n","#coleções, adicionando mais de 1 item em uma variavel atraves de listas\n","frutas = [\"banana\", \"maça\", \"pera\", \"melancia\", \"uva\", \"uva\", \"amora\"]\n","print(frutas)\n","#mostra todos os items dentro da lista\n","print(frutas[3])\n","#mostra um item especifico no caso o terceiro item (0,1,2,3)\n","print(frutas[:2])\n","#mostra uma parte especifica da lista no caso os dois primeiro itens(1,2)\n","print(len(frutas))\n","#mostra a quantidade de itens que tem na lista\n","print(frutas.count(\"uva\"))\n","#mostra quantas vezes determinado item aparece na lista (uva 2 vez)\n","print(frutas.index(\"melancia\"))\n","#mostra em que posição determinado item está. (0,1,2,3=melancia)\n","if \"banana\" in frutas:\n","    print(\"banana está em frutas\")\n","#se banana estiver em frutas mostre:\"banana está em frutas\"\n","print(frutas)\n","fruta_pedido = input(\"Insira uma nova fruta para adicionar na lista: \")\n","frutas.append(fruta_pedido)\n","#o usuario digitara uma nova fruta que será adicionada a lista atraves da função append,a fruta adicionada será automaticamente o último item da lista\n","print(frutas)\n","#printa a lista ja com a fruta adicionada\n","#nota: a função para adicionar um novo item acontece na linha 21. quando o código for executado novamente a lista fruta terá apenas os itens inicias e abrirá novamente o espeço para o usuario digitar a fruta a ser adicionada.\n","fruta_pedido_2 = input(\"Digite uma nova fruta para ser adicionada: \")\n","frutas.insert(0, fruta_pedido_2)\n","#o usuario adiciona um novo item na lista em uma posição especifica escolhida por ele. Nesse caso (0 | sera o primeiro item da lista) mesmo sendo o último a ser adicionado.\n","print(frutas)\n","#foi adicionado \"goiaba\" em fruta_pedido e \"kiwi\" em fruta_pedido_2. goiaba será o ultimo item da lista e kiwi o primeiro\n","frutas.remove(\"pera\")\n","#irá remover o item \"pera\" da lista, remove item especifico dito pelo usuario\n","print(frutas)\n","frutas.pop(4)\n","#ira remover o quarto item (0,1,2,3,4)\n","print(frutas)\n","fruta_removida = frutas.pop(4)\n","print(\"A fruta removida foi: \", fruta_removida)\n","#a fruta removida foi umas das 2 uvas\n","#frutas.clear (função que irá limpar a lista, removendo todos os itens)\n","cores1 = [\"azul\", \"preto\"]\n","cores2 = [\"amarelo\", \"laranja\"]\n","todas_as_cores = cores1 + cores2\n","print(todas_as_cores)\n","#todas_as_cores = \"azul\", \"preto\", \"amarelo\", \"laranja\". somando listas\n","todas_as_cores_copia = todas_as_cores\n","#criando uma copia da lista. serão identicas\n","#se eu remover um item de todas_as_cores tambem sera removido da copia\n","#ex: num=1,2,3|copia_num=1,2,3 | num.remove(\"1\") | num=2,3|copia_num=2,3\n","#isso acontece por serem literalmente a mesma lista e não exatamente uma copia\n","num = [1,2,3]\n","copia_num = num.copy()\n","num.remove(1)\n","print(num)\n","print(copia_num)\n","#agora sim é criada literalmente uma \"copia\", uma outra lista e quando removo \"1\" de 'num' o 'copia_num' ainda contem todos os 3 numeros [1,2,3]\n","#num.sort() ira colocar os numeros em ordem crescente\n","#frutas.sort() irá colocar as frutas em ordem alfabetica\n","#num.sort(reverse=true) ira colocar os numeros em ordem decrescente\n","#frutas.sort(reverse=true) ira colocar as frutas em ordem alfabetica contraria\n","#tuplas são como as listas, armazenam mais de um item porém não podem ser alteradas, não se pode adiconar/remover ou reoordenar os itens. ao inves de [] é utilizado o ()\n","carros = (\"uno\", \"corsa\", \"palio\")\n","print(carros)\n","#mas ainda sim pode se usar funções .count|contar a quant de itens, .index|ve a posição de um item, .len|ver a quant total de itens... funções que não alteram a lista\n","carros_lista = list(carros)\n","#agora a tupla carros se tornou uma lista e todas as funções podem ser usadas\n","#pode se alterar a lista e a transformar em tupla novamente\n","carros_lista = list(carros)\n","carros_lista.append(\"astra\")\n","print(carros_lista)\n","carros = tuple(carros_lista)\n","#o item foi adicionado enquanto era uma lista e voltou a ser dupla\n","print(carros)\n","#o item adicionado se mantem\n","\n","#dicionarios e chaves\n","#dicionarios usam {}\n","gato = {\"nome\" : \"Zury\", \"raça\" : \"SRD\"}\n","print(gato)\n","#ira mostrar as caracteristicas, \"definições\"\n","#mostra a chave nome que contem Zury e mostra a chave raça que contem SRD\n","#chave contem valor\n","print(gato[\"nome\"])\n","#retorna valor|definição especifica, nesse caso o nome do gato\n","#as chaves obrigatoriamente são str os valores podem variar\n","print(gato.get(\"nome\"))\n","#uma outra maenira de puxar um valor especifico\n","print(gato.get(\"idade\",\"idade não encontrada\"))\n","#foi solicitado que ele retorne o valor \"idade\" e caso não encontre retorne a mensagem: \"idade não econtrada\"\n","gato.pop(\"raça\")\n","print(gato)\n","#foi removido a chave raça e com isso o seu valor \"SRD\"\n","gato[\"idade\"] = 5\n","#adicionando nova chave e valor, possivel tambem atualizar\n","print(gato)\n","gato[\"nome\"] = \"Kitty\"\n","print(gato)\n","#adicionada a chave idade e valor 5 e tambem alterado o nome para \"kitty\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B1abShsER8Fv","executionInfo":{"status":"ok","timestamp":1741882420126,"user_tz":180,"elapsed":6851,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"a4b200dc-1edd-4bf2-9043-39a29dfc42da"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello word!\n","['banana', 'maça', 'pera', 'melancia', 'uva', 'uva', 'amora']\n","melancia\n","['banana', 'maça']\n","7\n","2\n","3\n","banana está em frutas\n","['banana', 'maça', 'pera', 'melancia', 'uva', 'uva', 'amora']\n","Insira uma nova fruta para adicionar na lista: kiwi\n","['banana', 'maça', 'pera', 'melancia', 'uva', 'uva', 'amora', 'kiwi']\n","Digite uma nova fruta para ser adicionada: maracuja\n","['maracuja', 'banana', 'maça', 'pera', 'melancia', 'uva', 'uva', 'amora', 'kiwi']\n","['maracuja', 'banana', 'maça', 'melancia', 'uva', 'uva', 'amora', 'kiwi']\n","['maracuja', 'banana', 'maça', 'melancia', 'uva', 'amora', 'kiwi']\n","A fruta removida foi:  uva\n","['azul', 'preto', 'amarelo', 'laranja']\n","[2, 3]\n","[1, 2, 3]\n","('uno', 'corsa', 'palio')\n","['uno', 'corsa', 'palio', 'astra']\n","('uno', 'corsa', 'palio', 'astra')\n","{'nome': 'Zury', 'raça': 'SRD'}\n","Zury\n","Zury\n","idade não encontrada\n","{'nome': 'Zury'}\n","{'nome': 'Zury', 'idade': 5}\n","{'nome': 'Kitty', 'idade': 5}\n"]}]},{"cell_type":"markdown","source":["exercicios aula coleções"],"metadata":{"id":"jbqwylNzfkQZ"}},{"cell_type":"code","source":["numeros = [1,2,3,4]\n","print(numeros)\n","numeros.append(6)\n","print(numeros)\n","numeros.remove(2)\n","print(numeros)\n","print(numeros.index(4))\n","numeros = [1,3,40,6]\n","print(numeros)\n","numeros.sort()\n","print(numeros)\n","numeros.sort(reverse=True)\n","print(numeros)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-ljUbRs3fjx6","executionInfo":{"status":"ok","timestamp":1741902750659,"user_tz":180,"elapsed":22,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"529758bb-59bc-42c5-dca3-6b4b868dedd7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3, 4]\n","[1, 2, 3, 4, 6]\n","[1, 3, 4, 6]\n","2\n","[1, 3, 40, 6]\n","[1, 3, 6, 40]\n","[40, 6, 3, 1]\n"]}]},{"cell_type":"code","source":["frutas = (\"maça\", \"banana\", \"laranja\", \"uva\")\n","print(frutas)\n","if \"banana\" in frutas:\n","    print(\"Banana está em frutas\")\n","print(frutas)\n","\n","frutas_lista = list(frutas)\n","frutas_lista.insert(0, \"abacaxi\")\n","frutas_lista.append(\"abacaxi\")\n","print(frutas_lista)\n","frutas = tuple(frutas_lista)\n","print(frutas)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XGRmtaC2hT1c","executionInfo":{"status":"ok","timestamp":1741903189722,"user_tz":180,"elapsed":7,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"d8f2b8c5-9cb2-46b6-bf79-e39a171b069e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('maça', 'banana', 'laranja', 'uva')\n","Banana está em frutas\n","('maça', 'banana', 'laranja', 'uva')\n","['abacaxi', 'maça', 'banana', 'laranja', 'uva', 'abacaxi']\n","('abacaxi', 'maça', 'banana', 'laranja', 'uva', 'abacaxi')\n"]}]},{"cell_type":"code","source":["aluno = {\"nome\" : \"maria\", \"idade\" : 20, \"curso\" : \"engenharia\"}\n","print(aluno)\n","aluno[\"nota\"] = 9.5\n","print(aluno)\n","aluno[\"idade\"] = 21\n","print(aluno)\n","aluno.pop(\"curso\")\n","print(aluno)\n","aluno[\"cursos\"] = \"fisica\", \"ads\", \"medicina\"\n","print(aluno)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dp2KALQKjgqE","executionInfo":{"status":"ok","timestamp":1741903762361,"user_tz":180,"elapsed":13,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"67e251ac-6306-4647-e175-0604267ae41e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'nome': 'maria', 'idade': 20, 'curso': 'engenharia'}\n","{'nome': 'maria', 'idade': 20, 'curso': 'engenharia', 'nota': 9.5}\n","{'nome': 'maria', 'idade': 21, 'curso': 'engenharia', 'nota': 9.5}\n","{'nome': 'maria', 'idade': 21, 'nota': 9.5}\n","{'nome': 'maria', 'idade': 21, 'nota': 9.5, 'cursos': ('fisica', 'ads', 'medicina')}\n"]}]},{"cell_type":"code","source":["for cadanumero in range(1, 101):\n","  print(cadanumero)\n","\n","#para cada numero em uma raio de 1 - 100 mostre numero\n","#ou. mostre cada numero em uma raio entre 1 e 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MrvJTXx3Veej","executionInfo":{"status":"ok","timestamp":1742823355454,"user_tz":180,"elapsed":4,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"589c1513-03b8-463c-dfc2-373354fa9f38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n","11\n","12\n","13\n","14\n","15\n","16\n","17\n","18\n","19\n","20\n","21\n","22\n","23\n","24\n","25\n","26\n","27\n","28\n","29\n","30\n","31\n","32\n","33\n","34\n","35\n","36\n","37\n","38\n","39\n","40\n","41\n","42\n","43\n","44\n","45\n","46\n","47\n","48\n","49\n","50\n","51\n","52\n","53\n","54\n","55\n","56\n","57\n","58\n","59\n","60\n","61\n","62\n","63\n","64\n","65\n","66\n","67\n","68\n","69\n","70\n","71\n","72\n","73\n","74\n","75\n","76\n","77\n","78\n","79\n","80\n","81\n","82\n","83\n","84\n","85\n","86\n","87\n","88\n","89\n","90\n","91\n","92\n","93\n","94\n","95\n","96\n","97\n","98\n","99\n","100\n"]}]},{"cell_type":"code","source":["quantidade_de_numeros = 0\n","\n","for numero in range(1, 11):\n","  quantidade_de_numeros += 1\n","\n","print(\"a quantidade de numero é: \", quantidade_de_numeros)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hQoAh0mPWRcI","executionInfo":{"status":"ok","timestamp":1742823575874,"user_tz":180,"elapsed":3,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"f00d6d59-8c09-4fb6-c6ce-f4c44557001d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["a quantidade de numero é:  10\n"]}]},{"cell_type":"code","source":["frutas_novas = [\"banana\", \"maça\", \"uva\", \"pera\"]\n","\n","for cadafruta in frutas_novas:\n","  print(cadafruta)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ekS2ZO1TW03_","executionInfo":{"status":"ok","timestamp":1742823336020,"user_tz":180,"elapsed":6,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"99d13faf-ccef-4e9e-d0a6-30474609b69d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["banana\n","maça\n","uva\n","pera\n"]}]},{"cell_type":"code","source":["nome = \"Nycolas Marinho\"\n","\n","for cadaletra in nome:\n","  print(cadaletra)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oEodzEt-Xkhv","executionInfo":{"status":"ok","timestamp":1742823478080,"user_tz":180,"elapsed":4,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"2dd2385f-0d0f-473e-a027-fcb2bbdc07ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["N\n","y\n","c\n","o\n","l\n","a\n","s\n"," \n","M\n","a\n","r\n","i\n","n\n","h\n","o\n"]}]},{"cell_type":"code","source":["contador = 0\n","\n","while contador <=3:\n","  contador += 1\n","  numero = int(input(\"Digite um numero par: \"))\n","  if numero % 2 == 0:\n","    print(\"Você digitou um numero par\")\n","\n","  else:\n","    print(\"Você digitou um numero impar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CDupIGDXYBTe","executionInfo":{"status":"ok","timestamp":1742823910558,"user_tz":180,"elapsed":6668,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"01c65422-1c0b-40f9-94fc-323b5eebc2b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite um numero par: 6\n","Você digitou um numero par\n","Digite um numero par: 7\n","Você digitou um numero impar\n","Digite um numero par: 3\n","Você digitou um numero impar\n","Digite um numero par: 9\n","Você digitou um numero impar\n"]}]},{"cell_type":"code","source":["numeros = [5, 8, 2, 9, 0, 1, 3, 4, 56, 17, 19]\n","for cadanum in numeros: #para cada numero na lista numeros\n","  if cadanum % 2 != 0: #se o resto da divisão do numero por 2 for diferente de 0 (impar) continue\n","    continue # ou seja se o numero foi impar não será contabilizado\n","  print(\"o numero\", cadanum, \"é par\") # para os que são = 0 (par) serão contabilizados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LEbiNKAQaNry","executionInfo":{"status":"ok","timestamp":1742824176880,"user_tz":180,"elapsed":4,"user":{"displayName":"Nycolas Marinho","userId":"03613820901503358102"}},"outputId":"f0d42859-e76a-4f19-b564-c4ee3f21ce67"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["o numero 8 é par\n","o numero 2 é par\n","o numero 0 é par\n","o numero 4 é par\n","o numero 56 é par\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"Alob4BTvbNVN"},"execution_count":null,"outputs":[]}]}